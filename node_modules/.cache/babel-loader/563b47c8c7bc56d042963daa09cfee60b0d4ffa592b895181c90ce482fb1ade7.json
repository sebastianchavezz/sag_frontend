{"ast":null,"code":"import _regeneratorRuntime from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport AppHeader from '../components/header';\nimport LeftCanvas from '../components/left-canvas';\nimport RightCanvas from '../components/right-canvas';\nimport ViewParty from '../components/view-party';\nimport axios from 'axios';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'Party',\n  components: {\n    AppHeader: AppHeader,\n    LeftCanvas: LeftCanvas,\n    RightCanvas: RightCanvas,\n    ViewParty: ViewParty\n  },\n  data: function data() {\n    return {\n      parties: []\n    };\n  },\n  computed: _objectSpread({}, mapState(['userId', 'accessToken', 'name', 'lastname'])),\n  mounted: function mounted() {\n    this.fetchPartyData();\n  },\n  methods: {\n    addParty: function addParty() {\n      this.$router.push(\"/create-party\");\n    },\n    fetchPartyData: function fetchPartyData() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"http://localhost:3001/getParty-by-user/\".concat(_this.userId)).then(function (response) {\n                _this.parties = response.data;\n                console.log('parties: ', _this.parties);\n              }).catch(function (error) {\n                console.error('Error fetching party data:', error);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["AppHeader","LeftCanvas","RightCanvas","ViewParty","axios","mapState","name","components","data","parties","computed","_objectSpread","mounted","fetchPartyData","methods","addParty","$router","push","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","get","concat","userId","then","response","console","log","catch","error","stop"],"sources":["src/views/party.vue"],"sourcesContent":["<template>\n  <div class=\"party-container\">\n    <app-header rootClassName=\"header-root-class-name2\"></app-header>\n    <div class=\"party-main-canvas\">\n      <left-canvas rootClassName=\"left-canvas-root-class-name3\"></left-canvas>\n      <right-canvas rootClassName=\"right-canvas-root-class-name3\"></right-canvas>\n      <div class=\"party-container1\">\n        <button @click=\"addParty\" type=\"button\" class=\"party-button button\">Add Party</button>\n        <view-party rootClassName=\"view-party-root-class-name\" :parties=\"parties\"></view-party>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '../components/header'\nimport LeftCanvas from '../components/left-canvas'\nimport RightCanvas from '../components/right-canvas'\nimport ViewParty from '../components/view-party'\nimport axios from 'axios'\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'Party',\n  components: {\n    AppHeader,\n    LeftCanvas,\n    RightCanvas,\n    ViewParty,\n  },\n  data() {\n    return {\n      parties: []\n    }\n  },\n  computed:{\n    ...mapState(['userId','accessToken','name', 'lastname']),\n  },\n  mounted() {\n    this.fetchPartyData();\n  },\n  methods:{\n    addParty(){\n      this.$router.push(\"/create-party\");\n    },\n    async fetchPartyData() {\n      // Assuming you have axios or similar HTTP client installed\n      await axios.get(`http://localhost:3001/getParty-by-user/${this.userId}`)\n        .then(response => {\n          this.parties = response.data;\n          console.log('parties: ', this.parties);\n        })\n        .catch(error => {\n          console.error('Error fetching party data:', error);\n        });\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n.party-container {\n  width: 100%;\n  display: flex;\n  overflow: auto;\n  min-height: 100vh;\n  align-items: center;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n.party-main-canvas {\n  flex: 1;\n  width: 1600px;\n  height: 100%;\n  display: flex;\n  position: relative;\n  align-items: flex-end;\n  justify-content: center;\n}\n.party-container1 {\n  top: 0px;\n  flex: 1;\n  left: 0px;\n  right: 0px;\n  width: 58%;\n  height: 100%;\n  margin: auto;\n  display: flex;\n  position: absolute;\n  align-self: flex-start;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n}\n.party-button {\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  width: 272px;\n  height: 64px;\n  margin: auto;\n  position: absolute;\n}\n@media(max-width: 1600px) {\n  .party-main-canvas {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":";;;;AAeA,OAAAA,SAAA;AACA,OAAAC,UAAA;AACA,OAAAC,WAAA;AACA,OAAAC,SAAA;AACA,OAAAC,KAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAP,SAAA,EAAAA,SAAA;IACAC,UAAA,EAAAA,UAAA;IACAC,WAAA,EAAAA,WAAA;IACAC,SAAA,EAAAA;EACA;EACAK,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA,EAAAC,aAAA,KACAN,QAAA,gDACA;EACAO,OAAA,WAAAA,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACAC,QAAA,WAAAA,SAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAJ,cAAA,WAAAA,eAAA;MAAA,IAAAK,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAEAvB,KAAA,CAAAwB,GAAA,2CAAAC,MAAA,CAAAX,KAAA,CAAAY,MAAA,GACAC,IAAA,WAAAC,QAAA;gBACAd,KAAA,CAAAT,OAAA,GAAAuB,QAAA,CAAAxB,IAAA;gBACAyB,OAAA,CAAAC,GAAA,cAAAhB,KAAA,CAAAT,OAAA;cACA,GACA0B,KAAA,WAAAC,KAAA;gBACAH,OAAA,CAAAG,KAAA,+BAAAA,KAAA;cACA;YAAA;YAAA;cAAA,OAAAX,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAf,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}