{"ast":null,"code":"import Vue from 'vue';\nimport Router from 'vue-router';\nimport Meta from 'vue-meta';\nimport store from './store';\nimport Login from './views/login';\nimport Register from './views/register';\nimport Home from './views/home';\nimport About from './views/about';\nimport Party from './views/party';\nimport Marketplace from './views/marketplace';\nimport CreateParty from './views/create-party';\nimport ViewParty from './views/view-party';\nimport GroupChat from './views/group-chat';\nimport ViewPresent from './views/view-present';\nimport ProductPage from './views/product-page';\nimport PrivateMessaging from './views/private-messaging';\nimport Profile from './views/profile';\nimport Post from './views/post';\nimport AddUserToParty from './views/add-user-to-party';\nimport Messages from './views/messages';\nimport Page from './views/page';\nimport NotFound from './views/not-found';\nimport './style.css';\nVue.use(Router);\nVue.use(Meta);\nvar router = new Router({\n  mode: 'history',\n  routes: [{\n    name: 'Login',\n    path: '/login',\n    component: Login\n  }, {\n    name: 'Register',\n    path: '/register',\n    component: Register\n  }, {\n    name: 'Home',\n    path: '/home',\n    component: Home,\n    meta: {\n      requiresAuth: true\n    } // Add this meta field to indicate that this route requires authentication\n  }, {\n    name: 'About',\n    path: '/',\n    component: About\n  }, {\n    name: 'Party',\n    path: '/party',\n    component: Party\n  }, {\n    name: 'Marketplace',\n    path: '/marketplace',\n    component: Marketplace\n  }, {\n    name: 'CreateParty',\n    path: '/create-party',\n    component: CreateParty\n  }, {\n    name: 'ViewParty',\n    path: '/view-party',\n    component: ViewParty\n  }, {\n    name: 'GroupChat',\n    path: '/group-chat',\n    component: GroupChat\n  }, {\n    name: 'ViewPresent',\n    path: '/view-present',\n    component: ViewPresent\n  }, {\n    name: 'ProductPage',\n    path: '/product-page',\n    component: ProductPage\n  }, {\n    name: 'PrivateMessaging',\n    path: '/private-messaging',\n    component: PrivateMessaging\n  }, {\n    name: 'Profile',\n    path: '/profile',\n    component: Profile\n  }, {\n    name: 'Post',\n    path: '/post',\n    component: Post\n  }, {\n    name: 'AddUserToParty',\n    path: '/add-user-to-party',\n    component: AddUserToParty\n  }, {\n    name: 'Messages',\n    path: '/messages',\n    component: Messages\n  }, {\n    name: 'Page',\n    path: '/page',\n    component: Page\n  }, {\n    name: '404 - Not Found',\n    path: '**',\n    component: NotFound,\n    fallback: true\n  }]\n});\n\n/* router.beforeEach(async (to, from, next) => {\n  if (\n    // Make sure the user is authenticated\n    !store.state.accessToken &&\n    // Avoid an infinite redirect\n    (to.name !== 'Login' && to.name !== 'Register' && to.name !== 'About')\n  ) {\n    // Redirect the user to the login page\n    next({ name: 'Login' });\n  } else {\n    // Continue navigation\n    next();\n  }\n}); */\nexport default router;","map":{"version":3,"names":["Vue","Router","Meta","store","Login","Register","Home","About","Party","Marketplace","CreateParty","ViewParty","GroupChat","ViewPresent","ProductPage","PrivateMessaging","Profile","Post","AddUserToParty","Messages","Page","NotFound","use","router","mode","routes","name","path","component","meta","requiresAuth","fallback"],"sources":["/home/sebastian/Desktop/git_sag_frontend/src/router.js"],"sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Meta from 'vue-meta'\nimport store from './store'\n\nimport Login from './views/login'\nimport Register from './views/register'\nimport Home from './views/home'\nimport About from './views/about'\nimport Party from './views/party'\nimport Marketplace from './views/marketplace'\nimport CreateParty from './views/create-party'\nimport ViewParty from './views/view-party'\nimport GroupChat from './views/group-chat'\nimport ViewPresent from './views/view-present'\nimport ProductPage from './views/product-page'\nimport PrivateMessaging from './views/private-messaging'\nimport Profile from './views/profile'\nimport Post from './views/post'\nimport AddUserToParty from './views/add-user-to-party'\nimport Messages from './views/messages'\nimport Page from './views/page'\nimport NotFound from './views/not-found'\nimport './style.css'\n\nVue.use(Router)\nVue.use(Meta)\n\nconst router = new Router({\n  mode: 'history',\n  routes: [\n    {\n      name: 'Login',\n      path: '/login',\n      component: Login,\n    },\n    {\n      name: 'Register',\n      path: '/register',\n      component: Register,\n    },\n    {\n      name: 'Home',\n      path: '/home',\n      component: Home,\n      meta: { requiresAuth: true } // Add this meta field to indicate that this route requires authentication\n    },\n    {\n      name: 'About',\n      path: '/',\n      component: About,\n    },\n    {\n      name: 'Party',\n      path: '/party',\n      component: Party,\n    },\n    {\n      name: 'Marketplace',\n      path: '/marketplace',\n      component: Marketplace,\n    },\n    {\n      name: 'CreateParty',\n      path: '/create-party',\n      component: CreateParty,\n    },\n    {\n      name: 'ViewParty',\n      path: '/view-party',\n      component: ViewParty,\n    },\n    {\n      name: 'GroupChat',\n      path: '/group-chat',\n      component: GroupChat,\n    },\n    {\n      name: 'ViewPresent',\n      path: '/view-present',\n      component: ViewPresent,\n    },\n    {\n      name: 'ProductPage',\n      path: '/product-page',\n      component: ProductPage,\n    },\n    {\n      name: 'PrivateMessaging',\n      path: '/private-messaging',\n      component: PrivateMessaging,\n    },\n    {\n      name: 'Profile',\n      path: '/profile',\n      component: Profile,\n    },\n    {\n      name: 'Post',\n      path: '/post',\n      component: Post,\n    },\n    {\n      name: 'AddUserToParty',\n      path: '/add-user-to-party',\n      component: AddUserToParty,\n    },\n    {\n      name: 'Messages',\n      path: '/messages',\n      component: Messages,\n    },\n    {\n      name: 'Page',\n      path: '/page',\n      component: Page,\n    },\n    {\n      name: '404 - Not Found',\n      path: '**',\n      component: NotFound,\n      fallback: true,\n    },\n  ],\n});\n\n/* router.beforeEach(async (to, from, next) => {\n  if (\n    // Make sure the user is authenticated\n    !store.state.accessToken &&\n    // Avoid an infinite redirect\n    (to.name !== 'Login' && to.name !== 'Register' && to.name !== 'About')\n  ) {\n    // Redirect the user to the login page\n    next({ name: 'Login' });\n  } else {\n    // Continue navigation\n    next();\n  }\n}); */\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}