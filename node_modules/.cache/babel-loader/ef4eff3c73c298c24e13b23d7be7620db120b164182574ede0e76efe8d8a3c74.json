{"ast":null,"code":"import _regeneratorRuntime from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport AppHeader from '../components/header';\nimport ProductCard1 from '../components/product-card1';\nimport LeftCanvas from '../components/left-canvas';\nimport RightCanvas from '../components/right-canvas';\nimport axios from 'axios';\nexport default {\n  name: 'UserProfile',\n  props: {},\n  components: {\n    AppHeader: AppHeader,\n    ProductCard1: ProductCard1,\n    LeftCanvas: LeftCanvas,\n    RightCanvas: RightCanvas\n  },\n  data: function data() {\n    return {\n      userid: null,\n      name: '',\n      profileImageData: '',\n      user: {} // Initialize user object to store user data\n    };\n  },\n  mounted: function mounted() {\n    this.userid = this.$route.params.userid;\n    this.fetchUserData(); // Fetch user data when the component is mounted\n    this.fetchProfileImage();\n  },\n  methods: {\n    fetchUserData: function fetchUserData() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:3001/get-profile/\".concat(_this.userid));\n            case 3:\n              response = _context.sent;\n              _this.user = response.data; // Store the user data in the user object\n              _this.name = response.data.naam;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching user data:', _context.t0);\n              // Handle error\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    fetchProfileImage: function fetchProfileImage() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, blob;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('FETCHING IMAGE!!');\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get(\"http://localhost:3001/profile-image/\".concat(_this2.userid), {\n                headers: {\n                  Authorization: \"Bearer \".concat(_this2.accessToken) // Include access token if required\n                },\n                responseType: 'arraybuffer' // Specify responseType as 'arraybuffer' to receive binary data\n              });\n            case 4:\n              response = _context2.sent;\n              // Create a blob from the binary data\n              blob = new Blob([response.data], {\n                type: 'image/jpeg'\n              }); // Adjust type accordingly\n              // Create an object URL from the blob\n              _this2.profileImageData = URL.createObjectURL(blob);\n              _context2.next = 12;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('Error fetching profile image:', _context2.t0);\n              // Handle error\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["AppHeader","ProductCard1","LeftCanvas","RightCanvas","axios","name","props","components","data","userid","profileImageData","user","mounted","$route","params","fetchUserData","fetchProfileImage","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","sent","naam","t0","console","error","stop","_this2","_callee2","blob","_callee2$","_context2","log","headers","Authorization","accessToken","responseType","Blob","type","URL","createObjectURL"],"sources":["src/views/user-profile.vue"],"sourcesContent":["<template>\n    <div class=\"profile-container\">\n      <app-header rootClassName=\"header-root-class-name9\"></app-header>\n      <div class=\"profile-main-div\">\n        <div class=\"profile-profile\">\n          <div class=\"profile-container1\">\n            <h1 class=\"profile-text\">{{ this.name }} Profile</h1>\n          </div>\n          <div class=\"profile-container2\">\n            <button type=\"button\" class=\"button\">Add Friend</button>\n            <button type=\"button\" class=\"button\">Message</button>\n            <button type=\"button\" class=\"button\">Add To Party</button>\n          </div>\n          <div class=\"profile-product-placement\">\n            <img\n              alt=\"Profile Image\"\n              :src=\"profileImageData\"\n              class=\"profile-image\"\n            />\n          </div>\n          <div class=\"profile-container4\">\n            <h1 class=\"profile-text1\">\n              <span>Wishlist</span>\n              <br />\n            </h1>\n          </div>\n          <div class=\"profile-row1\">\n            <product-card1\n              rootClassName=\"product-card1-root-class-name16\"\n            ></product-card1>\n            <product-card1\n              rootClassName=\"product-card1-root-class-name17\"\n            ></product-card1>\n            <product-card1\n              rootClassName=\"product-card1-root-class-name18\"\n            ></product-card1>\n          </div>\n        </div>\n        <left-canvas rootClassName=\"left-canvas-root-class-name10\"></left-canvas>\n        <right-canvas rootClassName=\"right-canvas-root-class-name10\"></right-canvas>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import AppHeader from '../components/header'\n  import ProductCard1 from '../components/product-card1'\n  import LeftCanvas from '../components/left-canvas'\n  import RightCanvas from '../components/right-canvas'\n  import axios from 'axios'\n  \n  export default {\n    name: 'UserProfile',\n    props: {},\n    components: {\n      AppHeader,\n      ProductCard1,\n      LeftCanvas,\n      RightCanvas,\n    },\n    data() {\n      return {\n        userid: null,\n        name: '',\n        profileImageData: '',\n        user: {} // Initialize user object to store user data\n      };\n    },\n    mounted() {\n      this.userid = this.$route.params.userid;\n      this.fetchUserData(); // Fetch user data when the component is mounted\n      this.fetchProfileImage();\n    },\n    methods: {\n      async fetchUserData() {\n        try {\n          // Make an API call to fetch user data using the userid\n          const response = await axios.get(`http://localhost:3001/get-profile/${this.userid}`);\n          this.user = response.data; // Store the user data in the user object\n            this.name = response.data.naam;\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          // Handle error\n        }\n      },\n      async fetchProfileImage() {\n        console.log('FETCHING IMAGE!!');\n        try {\n          // Make an API call to fetch the profile image binary data from the backend\n          const response = await axios.get(`http://localhost:3001/profile-image/${this.userid}`, {\n            headers: {\n              Authorization: `Bearer ${this.accessToken}` // Include access token if required\n            },\n            responseType: 'arraybuffer' // Specify responseType as 'arraybuffer' to receive binary data\n          });\n          // Create a blob from the binary data\n          const blob = new Blob([response.data], { type: 'image/jpeg' }); // Adjust type accordingly\n          // Create an object URL from the blob\n          this.profileImageData = URL.createObjectURL(blob);\n        } catch (error) {\n          console.error('Error fetching profile image:', error);\n          // Handle error\n        }\n      },\n    }\n  }\n  </script>\n  \n  import AppHeader from '../components/header'\n  import ProductCard1 from '../components/product-card1'\n  import LeftCanvas from '../components/left-canvas'\n  import RightCanvas from '../components/right-canvas'\n  import axios from 'axios'\n  \n  export default {\n    name: 'UserProfile',\n    props: {},\n    components: {\n      AppHeader,\n      ProductCard1,\n      LeftCanvas,\n      RightCanvas,\n    },\n    data(){\n      return{\n        userid : null,\n        profileImageData : ''\n      };\n    },\n    mounted(){\n        this.userid = this.$route.params.userid;\n    },  \n    created() {\n      // Fetch the profile image of the user when the component is created\n      this.fetchProfileImage();\n    },\n    methods: {\n      async fetchProfileImage() {\n        try {\n          // Make an API call to fetch the profile image binary data from the backend\n          const response = await axios.get(`http://localhost:3001/profile-image/${this.userid}`, {\n            headers: {\n              Authorization: `Bearer ${this.accessToken}` // Include access token if required\n            },\n            responseType: 'arraybuffer' // Specify responseType as 'arraybuffer' to receive binary data\n          });\n          console.log('The pic is updated', response.data);\n          // Create a blob from the binary data\n          const blob = new Blob([response.data], { type: 'image/jpeg' }); // Adjust type accordingly\n          // Create an object URL from the blob\n          this.profileImageData = URL.createObjectURL(blob);\n        } catch (error) {\n          console.error('Error fetching profile image:', error);\n          // Handle error\n        }\n      },\n    }\n  }\n  </script>\n  \n  \n  <style scoped>\n  .profile-container {\n    width: 100%;\n    display: flex;\n    overflow: auto;\n    min-height: 100vh;\n    align-items: center;\n    flex-direction: column;\n  }\n  .profile-main-div {\n    gap: 0;\n    flex: 1;\n    width: 1600px;\n    height: 100%;\n    display: flex;\n    position: relative;\n    align-items: flex-start;\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n  .profile-profile {\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    width: 58%;\n    height: 100%;\n    display: flex;\n    padding: var(--dl-space-space-unit);\n    position: absolute;\n    margin-top: var(--dl-space-space-unit);\n    align-items: flex-start;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: auto;\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n  .profile-container1 {\n    width: 100%;\n    height: 52px;\n    display: flex;\n    align-items: flex-start;\n  }\n  .profile-text {\n    align-self: center;\n  }\n  .profile-container2 {\n    flex: 0 0 auto;\n    width: auto;\n    height: auto;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n  .profile-product-placement {\n    flex: 0 0 auto;\n    width: 100%;\n    height: 40%;\n    display: flex;\n    margin-top: var(--dl-space-space-oneandhalfunits);\n    align-items: center;\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n  .profile-image {\n    width: 80%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .profile-container3 {\n    flex: 0 0 auto;\n    width: 100%;\n    height: 100px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .profile-container4 {\n    flex: 0 0 auto;\n    width: 100%;\n    height: 100px;\n    display: flex;\n    align-items: flex-start;\n  }\n  .profile-text1 {\n    align-self: center;\n  }\n  .profile-row1 {\n    flex: 0 0 auto;\n    width: 100%;\n    height: auto;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n  @media(max-width: 1600px) {\n    .profile-main-div {\n      width: 1600px;\n      height: 100%;\n    }\n    .profile-product-placement {\n      height: 100%;\n      margin: var(--dl-space-space-halfunit);\n      padding: var(--dl-space-space-halfunit);\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n    .profile-image {\n      width: 684px;\n      height: 355px;\n    }\n    .profile-row1 {\n      height: auto;\n    }\n  }\n  @media(max-width: 1200px) {\n    .profile-main-div {\n      width: 100%;\n    }\n  }\n  </style>\n  "],"mappings":";;;;;;;;;;;;AA6CA,OAAAA,SAAA;AACA,OAAAC,YAAA;AACA,OAAAC,UAAA;AACA,OAAAC,WAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,UAAA;IACAP,SAAA,EAAAA,SAAA;IACAC,YAAA,EAAAA,YAAA;IACAC,UAAA,EAAAA,UAAA;IACAC,WAAA,EAAAA;EACA;EACAK,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MACAJ,IAAA;MACAK,gBAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAH,MAAA,QAAAI,MAAA,CAAAC,MAAA,CAAAL,MAAA;IACA,KAAAM,aAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACAF,aAAA,WAAAA,cAAA;MAAA,IAAAG,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGAxB,KAAA,CAAAyB,GAAA,sCAAAC,MAAA,CAAAZ,KAAA,CAAAT,MAAA;YAAA;cAAAc,QAAA,GAAAG,QAAA,CAAAK,IAAA;cACAb,KAAA,CAAAP,IAAA,GAAAY,QAAA,CAAAf,IAAA;cACAU,KAAA,CAAAb,IAAA,GAAAkB,QAAA,CAAAf,IAAA,CAAAwB,IAAA;cAAAN,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;cAEAQ,OAAA,CAAAC,KAAA,8BAAAT,QAAA,CAAAO,EAAA;cACA;YAAA;YAAA;cAAA,OAAAP,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAEA;IACAN,iBAAA,WAAAA,kBAAA;MAAA,IAAAqB,MAAA;MAAA,OAAAlB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,IAAAf,QAAA,EAAAgB,IAAA;QAAA,OAAAnB,mBAAA,GAAAI,IAAA,UAAAgB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;YAAA;cACAM,OAAA,CAAAQ,GAAA;cAAAD,SAAA,CAAAd,IAAA;cAAAc,SAAA,CAAAb,IAAA;cAAA,OAGAxB,KAAA,CAAAyB,GAAA,wCAAAC,MAAA,CAAAO,MAAA,CAAA5B,MAAA;gBACAkC,OAAA;kBACAC,aAAA,YAAAd,MAAA,CAAAO,MAAA,CAAAQ,WAAA;gBACA;gBACAC,YAAA;cACA;YAAA;cALAvB,QAAA,GAAAkB,SAAA,CAAAV,IAAA;cAMA;cACAQ,IAAA,OAAAQ,IAAA,EAAAxB,QAAA,CAAAf,IAAA;gBAAAwC,IAAA;cAAA;cACA;cACAX,MAAA,CAAA3B,gBAAA,GAAAuC,GAAA,CAAAC,eAAA,CAAAX,IAAA;cAAAE,SAAA,CAAAb,IAAA;cAAA;YAAA;cAAAa,SAAA,CAAAd,IAAA;cAAAc,SAAA,CAAAR,EAAA,GAAAQ,SAAA;cAEAP,OAAA,CAAAC,KAAA,kCAAAM,SAAA,CAAAR,EAAA;cACA;YAAA;YAAA;cAAA,OAAAQ,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}