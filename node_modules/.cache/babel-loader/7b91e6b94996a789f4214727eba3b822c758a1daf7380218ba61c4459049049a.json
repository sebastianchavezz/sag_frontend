{"ast":null,"code":"import _regeneratorRuntime from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport AppHeader from '../components/header';\nimport LeftCanvas from '../components/left-canvas';\nimport RightCanvas from '../components/right-canvas';\nimport axios from 'axios';\nimport { Buffer } from 'buffer';\nexport default {\n  name: 'ViewPartyDetails',\n  components: {\n    AppHeader: AppHeader,\n    LeftCanvas: LeftCanvas,\n    RightCanvas: RightCanvas\n  },\n  data: function data() {\n    return {\n      partyid: null,\n      partyData: {\n        name: '',\n        occasion: '',\n        date: '',\n        description: '',\n        members: [],\n        // Initialize image as a Blob object\n        image: null\n      }\n    };\n  },\n  computed: {\n    imageSrc: function imageSrc() {\n      if (this.partyData.image && this.partyData.image.length > 0) {\n        // Concatenate all buffers into a single buffer\n        console.log('WE IN IMAGE');\n        var concatenatedBuffer = Buffer.concat(this.partyData.image);\n\n        // Create a Blob from the concatenated buffer\n        var blob = new Blob([concatenatedBuffer], {\n          type: 'image/jpeg'\n        });\n\n        // Create an object URL from the blob\n        return URL.createObjectURL(blob);\n      } else {\n        return ''; // Return empty string if image data is not available\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.partyid = this.$route.params.partyid;\n    this.fetchPartyData();\n  },\n  methods: {\n    fetchPartyData: function fetchPartyData() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:3001/get-party/\".concat(_this.partyid));\n            case 3:\n              response = _context.sent;\n              _this.partyData = {\n                name: response.data.name,\n                occasion: response.data.occasion,\n                date: response.data.date,\n                description: response.data.description,\n                members: response.data.members,\n                image: response.data.image\n              };\n              console.log('image: ', _this.partyData.image);\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching party data:', _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    updateParty: function updateParty() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    } // Implement logic to update party data\n  }\n};","map":{"version":3,"names":["AppHeader","LeftCanvas","RightCanvas","axios","Buffer","name","components","data","partyid","partyData","occasion","date","description","members","image","computed","imageSrc","length","console","log","concatenatedBuffer","concat","blob","Blob","type","URL","createObjectURL","mounted","$route","params","fetchPartyData","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","t0","error","stop","updateParty","_callee2","_callee2$","_context2"],"sources":["src/views/view-party-details.vue"],"sourcesContent":["<template>\n  <div class=\"view-party-container\">\n    <app-header rootClassName=\"header-root-class-name4\"></app-header>\n    <div class=\"view-party-main-canvas\">\n      <left-canvas rootClassName=\"left-canvas-root-class-name5\"></left-canvas>\n      <right-canvas rootClassName=\"right-canvas-root-class-name5\"></right-canvas>\n      <div class=\"view-party-container1\">\n        <div class=\"view-party-container2\">\n          <h1>Party: {{ partyData.name }}</h1>\n        </div>\n        <form class=\"view-party-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Name Party\"\n            class=\"view-party-textinput input\"\n            v-model=\"partyData.name\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Occasion\"\n            class=\"view-party-textinput1 input\"\n            v-model=\"partyData.occasion\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Date\"\n            class=\"view-party-textinput2 input\"\n            v-model=\"partyData.date\"\n          />\n          <textarea\n            placeholder=\"Description\"\n            class=\"view-party-textarea textarea\"\n            v-model=\"partyData.description\"\n          ></textarea>\n          <textarea\n            placeholder=\"Members\"\n            class=\"view-party-textarea1 textarea\"\n          >\n            {{ partyData.members ? partyData.members.join(', ' ): ''}}\n          </textarea>\n          <button type=\"button\" class=\"button\" @click=\"updateParty\">\n            <span>\n              <span>Update</span>\n              <br />\n            </span>\n          </button>\n          <button type=\"button\" class=\"button\">\n            <span>\n              <span>View Presents</span>\n              <br />\n            </span>\n          </button>\n          <button type=\"button\" class=\"button\">\n            <span>\n              <span>Delete</span>\n              <br />\n            </span>\n          </button>\n          <button type=\"button\" class=\"button\">\n            <span>\n              <span>Go To Group Chat</span>\n              <br />\n            </span>\n          </button>\n        </form>\n        <img\n          alt=\"image\"\n          :src= \"imageSrc\"\n          class=\"view-party-image\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '../components/header'\nimport LeftCanvas from '../components/left-canvas'\nimport RightCanvas from '../components/right-canvas'\nimport axios from 'axios'\nimport {Buffer} from 'buffer'\n\nexport default {\n  name: 'ViewPartyDetails',\n  components: {\n    AppHeader,\n    LeftCanvas,\n    RightCanvas,\n  },\n  data() {\n    return {\n      partyid: null,\n      partyData: {\n        name: '',\n        occasion: '',\n        date: '',\n        description: '',\n        members: [],\n        // Initialize image as a Blob object\n        image: null\n      }\n    };\n  },\n  computed: {\n  imageSrc() {\n    if (this.partyData.image && this.partyData.image.length > 0) {\n      // Concatenate all buffers into a single buffer\n      console.log('WE IN IMAGE');\n      const concatenatedBuffer = Buffer.concat(this.partyData.image);\n      \n      // Create a Blob from the concatenated buffer\n      const blob = new Blob([concatenatedBuffer], { type: 'image/jpeg' });\n      \n      // Create an object URL from the blob\n      return URL.createObjectURL(blob);\n    } else {\n      return ''; // Return empty string if image data is not available\n    }\n  }\n},\n\n  mounted() {\n    this.partyid = this.$route.params.partyid;\n    this.fetchPartyData();\n  },\n  methods: {\n    async fetchPartyData() {\n      try {\n        const response = await axios.get(`http://localhost:3001/get-party/${this.partyid}`);\n        this.partyData = {\n          name: response.data.name,\n          occasion: response.data.occasion,\n          date: response.data.date,\n          description: response.data.description,\n          members: response.data.members,\n          image: response.data.image\n        };\n        console.log('image: ', this.partyData.image);\n      } catch (error) {\n        console.error('Error fetching party data:', error);\n      }\n    },\n    async updateParty() {\n      // Implement logic to update party data\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n.view-party-container {\n  width: 100%;\n  display: flex;\n  overflow: auto;\n  min-height: 100vh;\n  align-items: center;\n  flex-direction: column;\n}\n.view-party-main-canvas {\n  flex: 1;\n  width: 1600px;\n  height: 100%;\n  display: flex;\n  position: relative;\n  align-items: flex-end;\n  justify-content: center;\n}\n.view-party-container1 {\n  top: 0px;\n  flex: 1;\n  left: 0px;\n  right: 0px;\n  width: 58%;\n  height: 100%;\n  margin: auto;\n  display: flex;\n  position: absolute;\n  align-self: flex-start;\n  align-items: center;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n.view-party-container2 {\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 98px;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n}\n.view-party-form {\n  left: 0px;\n  right: 0px;\n  width: 98%;\n  bottom: 56px;\n  height: 378px;\n  margin: var(--dl-space-space-halfunit);\n  display: flex;\n  position: absolute;\n  align-items: center;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n.view-party-textinput {\n  width: 80%;\n}\n.view-party-textinput1 {\n  width: 80%;\n}\n.view-party-textinput2 {\n  width: 80%;\n}\n.view-party-textarea {\n  width: 80%;\n}\n.view-party-textarea1 {\n  width: 80%;\n}\n.view-party-image {\n  top: 102px;\n  left: 0px;\n  right: 0px;\n  width: 80%;\n  height: 352px;\n  margin: auto;\n  position: absolute;\n  object-fit: cover;\n}\n@media(max-width: 1600px) {\n  .view-party-main-canvas {\n    width: 100%;\n  }\n  .view-party-container1 {\n    align-items: center;\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n  .view-party-image {\n    width: 684px;\n    height: 355px;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;AA4EA,OAAAA,SAAA;AACA,OAAAC,UAAA;AACA,OAAAC,WAAA;AACA,OAAAC,KAAA;AACA,SAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,SAAA,EAAAA,SAAA;IACAC,UAAA,EAAAA,UAAA;IACAC,WAAA,EAAAA;EACA;EACAK,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;QACAJ,IAAA;QACAK,QAAA;QACAC,IAAA;QACAC,WAAA;QACAC,OAAA;QACA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,QAAA,WAAAA,SAAA;MACA,SAAAP,SAAA,CAAAK,KAAA,SAAAL,SAAA,CAAAK,KAAA,CAAAG,MAAA;QACA;QACAC,OAAA,CAAAC,GAAA;QACA,IAAAC,kBAAA,GAAAhB,MAAA,CAAAiB,MAAA,MAAAZ,SAAA,CAAAK,KAAA;;QAEA;QACA,IAAAQ,IAAA,OAAAC,IAAA,EAAAH,kBAAA;UAAAI,IAAA;QAAA;;QAEA;QACA,OAAAC,GAAA,CAAAC,eAAA,CAAAJ,IAAA;MACA;QACA;MACA;IACA;EACA;EAEAK,OAAA,WAAAA,QAAA;IACA,KAAAnB,OAAA,QAAAoB,MAAA,CAAAC,MAAA,CAAArB,OAAA;IACA,KAAAsB,cAAA;EACA;EACAC,OAAA;IACAD,cAAA,WAAAA,eAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAvC,KAAA,CAAAwC,GAAA,oCAAAtB,MAAA,CAAAW,KAAA,CAAAxB,OAAA;YAAA;cAAA6B,QAAA,GAAAG,QAAA,CAAAI,IAAA;cACAZ,KAAA,CAAAvB,SAAA;gBACAJ,IAAA,EAAAgC,QAAA,CAAA9B,IAAA,CAAAF,IAAA;gBACAK,QAAA,EAAA2B,QAAA,CAAA9B,IAAA,CAAAG,QAAA;gBACAC,IAAA,EAAA0B,QAAA,CAAA9B,IAAA,CAAAI,IAAA;gBACAC,WAAA,EAAAyB,QAAA,CAAA9B,IAAA,CAAAK,WAAA;gBACAC,OAAA,EAAAwB,QAAA,CAAA9B,IAAA,CAAAM,OAAA;gBACAC,KAAA,EAAAuB,QAAA,CAAA9B,IAAA,CAAAO;cACA;cACAI,OAAA,CAAAC,GAAA,YAAAa,KAAA,CAAAvB,SAAA,CAAAK,KAAA;cAAA0B,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAK,EAAA,GAAAL,QAAA;cAEAtB,OAAA,CAAA4B,KAAA,+BAAAN,QAAA,CAAAK,EAAA;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA;IAEA;IACAY,WAAA,WAAAA,YAAA;MAAA,OAAAf,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAc,SAAA;QAAA,OAAAf,mBAAA,GAAAI,IAAA,UAAAY,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAV,IAAA,GAAAU,SAAA,CAAAT,IAAA;YAAA;YAAA;cAAA,OAAAS,SAAA,CAAAJ,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IAEA,EADA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}