{"ast":null,"code":"import _regeneratorRuntime from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"/home/sebastian/Desktop/git_sag_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport axios from 'axios';\nimport { getCurrentUserId, userIsLoggedIn } from '@/auth/auth';\nimport AppHeader from '../components/header';\nimport LeftCanvas from '../components/left-canvas';\nimport RightCanvas from '../components/right-canvas';\nexport default {\n  name: 'CreateParty',\n  props: {},\n  components: {\n    AppHeader: AppHeader,\n    LeftCanvas: LeftCanvas,\n    RightCanvas: RightCanvas\n  },\n  data: function data() {\n    return {\n      partyName: \"\",\n      occasion: \"\",\n      date: null,\n      inputType: 'email',\n      // Default input type\n      members: [{\n        identifier: \"\",\n        type: 'email'\n      }] // Default member type\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var userId, newParty, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (userIsLoggedIn()) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              // Retrieve user ID\n              userId = getCurrentUserId();\n              newParty = {\n                userId: userId,\n                occasion: _this.occasion,\n                date: _this.date,\n                users: _this.members.map(function (member) {\n                  return _defineProperty({}, member.type, member.identifier);\n                }) // Map to identifier type\n              };\n              _context.next = 7;\n              return axios.post('http://localhost:3001/add-party', newParty);\n            case 7:\n              response = _context.sent;\n              console.log('Party added successfully:', response.data);\n              _this.$emit('party-added', response.data);\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error adding party:', _context.t0.message);\n              // Handle error\n            case 15:\n              // Clear the form fields after submission\n              _this.partyName = \"\";\n              _this.occasion = \"\";\n              _this.date = null;\n              _this.members = [{\n                identifier: \"\",\n                type: _this.inputType\n              }];\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 12]]);\n      }))();\n    },\n    addMember: function addMember() {\n      this.members.push({\n        identifier: \"\",\n        type: this.inputType\n      });\n    },\n    removeMember: function removeMember(index) {\n      this.members.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["axios","getCurrentUserId","userIsLoggedIn","AppHeader","LeftCanvas","RightCanvas","name","props","components","data","partyName","occasion","date","inputType","members","identifier","type","methods","submitForm","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","newParty","response","wrap","_callee$","_context","prev","next","abrupt","users","map","member","_defineProperty","post","sent","console","log","$emit","t0","error","message","stop","addMember","push","removeMember","index","splice"],"sources":["src/views/create-party.vue"],"sourcesContent":["<template>\n  <div class=\"create-party-container\">\n    <app-header rootClassName=\"header-root-class-name3\"></app-header>\n    <div class=\"create-party-main-canvas\">\n      <left-canvas rootClassName=\"left-canvas-root-class-name4\"></left-canvas>\n      <right-canvas rootClassName=\"right-canvas-root-class-name4\"></right-canvas>\n      <div class=\"create-party-container1\">\n        <div class=\"create-party-container2\"><h1>Create a Party</h1></div>\n        <form class=\"create-party-form\" @submit.prevent=\"submitForm\">\n          <input type=\"text\" v-model=\"partyName\" placeholder=\"Name Party\" class=\"create-party-textinput input\" />\n          <input type=\"text\" v-model=\"occasion\" placeholder=\"occasion\" class=\"create-party-textinput1 input\" />\n          <input type=\"text\" v-model=\"date\" placeholder=\"date\" class=\"create-party-textinput2 input\" />\n          <textarea placeholder=\"Description\" class=\"create-party-textarea textarea\"></textarea>\n          <div v-for=\"(member, index) in members\" :key=\"index\">\n            <input type=\"text\" v-model=\"member.identifier\" :placeholder=\"member.type === 'email' ? 'Friend\\'s Email' : 'Friend\\'s Username'\" class=\"create-party-textinput input\" />\n            <button type=\"button\" @click=\"removeMember(index)\" class=\"button\">Remove</button>\n          </div>\n          <select v-model=\"inputType\" class=\"input-type-select\">\n            <option value=\"email\">Email</option>\n            <option value=\"username\">Username</option>\n          </select>\n          <button type=\"button\" @click=\"addMember\" class=\"button\">Add Friend</button>\n          <button type=\"submit\" class=\"button\">Plan a Party</button>\n        </form>\n        <img alt=\"image\" src=\"https://play.teleporthq.io/static/svg/default-img.svg\" class=\"create-party-image\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { getCurrentUserId, userIsLoggedIn } from '@/auth/auth';\nimport AppHeader from '../components/header'\nimport LeftCanvas from '../components/left-canvas'\nimport RightCanvas from '../components/right-canvas'\n\nexport default {\n  name: 'CreateParty',\n  props: {},\n  components: {\n    AppHeader,\n    LeftCanvas,\n    RightCanvas,\n  },\n  data() {\n    return {\n      partyName: \"\",\n      occasion: \"\",\n      date: null,\n      inputType: 'email', // Default input type\n      members: [{ identifier: \"\", type: 'email' }] // Default member type\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        if (!userIsLoggedIn()) {\n          // Redirect to login page or show login modal\n          return;\n        }\n        // Retrieve user ID\n        const userId = getCurrentUserId();\n        const newParty = {\n          userId: userId,\n          occasion: this.occasion,\n          date: this.date,\n          users: this.members.map(member => ({ [member.type]: member.identifier })) // Map to identifier type\n        };\n        const response = await axios.post('http://localhost:3001/add-party', newParty);\n        console.log('Party added successfully:', response.data);\n        this.$emit('party-added', response.data);\n      } catch (error) {\n        console.error('Error adding party:', error.message);\n        // Handle error\n      }\n\n      // Clear the form fields after submission\n      this.partyName = \"\";\n      this.occasion = \"\";\n      this.date = null;\n      this.members = [{ identifier: \"\", type: this.inputType }];\n    },\n    addMember() {\n      this.members.push({ identifier: \"\", type: this.inputType });\n    },\n    removeMember(index) {\n      this.members.splice(index, 1);\n    }\n  },\n};\n</script>\n\n<style scoped>\n.create-party-container {\n  width: 100%;\n  display: flex;\n  overflow: auto;\n  min-height: 100vh;\n  align-items: center;\n  flex-direction: column;\n}\n.create-party-main-canvas {\n  flex: 1;\n  width: 1600px;\n  height: 100%;\n  display: flex;\n  position: relative;\n  align-items: flex-end;\n  justify-content: center;\n}\n.create-party-container1 {\n  top: 0px;\n  flex: 1;\n  left: 0px;\n  right: 0px;\n  width: 58%;\n  height: 100%;\n  margin: auto;\n  display: flex;\n  position: absolute;\n  align-self: flex-start;\n  align-items: center;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n.create-party-container2 {\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 98px;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n}\n.create-party-form {\n  left: 0px;\n  right: 0px;\n  width: 98%;\n  bottom: 56px;\n  height: 378px;\n  margin: var(--dl-space-space-halfunit);\n  display: flex;\n  position: absolute;\n  align-items: center;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n.create-party-textinput {\n  width: 80%;\n}\n.create-party-textinput1 {\n  width: 80%;\n}\n.create-party-textinput2 {\n  width: 80%;\n}\n.create-party-textarea {\n  width: 80%;\n}\n.create-party-image {\n  top: 102px;\n  left: 0px;\n  right: 0px;\n  width: 80%;\n  height: 352px;\n  margin: auto;\n  position: absolute;\n  object-fit: cover;\n}\n@media(max-width: 1600px) {\n  .create-party-main-canvas {\n    width: 100%;\n  }\n  .create-party-container1 {\n    align-items: center;\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n  .create-party-image {\n    width: 684px;\n    height: 355px;\n  }\n}\n</style>\n"],"mappings":";;;;;;AA+BA,OAAAA,KAAA;AACA,SAAAC,gBAAA,EAAAC,cAAA;AACA,OAAAC,SAAA;AACA,OAAAC,UAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,UAAA;IACAL,SAAA,EAAAA,SAAA;IACAC,UAAA,EAAAA,UAAA;IACAC,WAAA,EAAAA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,QAAA;MACAC,IAAA;MACAC,SAAA;MAAA;MACAC,OAAA;QAAAC,UAAA;QAAAC,IAAA;MAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA,WAAAA,WAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,QAAA,EAAAC,QAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAA,IAEA5B,cAAA;gBAAA2B,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cAIA;cACAR,MAAA,GAAAvB,gBAAA;cACAwB,QAAA;gBACAD,MAAA,EAAAA,MAAA;gBACAb,QAAA,EAAAQ,KAAA,CAAAR,QAAA;gBACAC,IAAA,EAAAO,KAAA,CAAAP,IAAA;gBACAqB,KAAA,EAAAd,KAAA,CAAAL,OAAA,CAAAoB,GAAA,WAAAC,MAAA;kBAAA,OAAAC,eAAA,KAAAD,MAAA,CAAAnB,IAAA,EAAAmB,MAAA,CAAApB,UAAA;gBAAA;cACA;cAAAc,QAAA,CAAAE,IAAA;cAAA,OACA/B,KAAA,CAAAqC,IAAA,oCAAAZ,QAAA;YAAA;cAAAC,QAAA,GAAAG,QAAA,CAAAS,IAAA;cACAC,OAAA,CAAAC,GAAA,8BAAAd,QAAA,CAAAjB,IAAA;cACAU,KAAA,CAAAsB,KAAA,gBAAAf,QAAA,CAAAjB,IAAA;cAAAoB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAEAU,OAAA,CAAAI,KAAA,wBAAAd,QAAA,CAAAa,EAAA,CAAAE,OAAA;cACA;YAAA;cAGA;cACAzB,KAAA,CAAAT,SAAA;cACAS,KAAA,CAAAR,QAAA;cACAQ,KAAA,CAAAP,IAAA;cACAO,KAAA,CAAAL,OAAA;gBAAAC,UAAA;gBAAAC,IAAA,EAAAG,KAAA,CAAAN;cAAA;YAAA;YAAA;cAAA,OAAAgB,QAAA,CAAAgB,IAAA;UAAA;QAAA,GAAAtB,OAAA;MAAA;IACA;IACAuB,SAAA,WAAAA,UAAA;MACA,KAAAhC,OAAA,CAAAiC,IAAA;QAAAhC,UAAA;QAAAC,IAAA,OAAAH;MAAA;IACA;IACAmC,YAAA,WAAAA,aAAAC,KAAA;MACA,KAAAnC,OAAA,CAAAoC,MAAA,CAAAD,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}