{"ast":null,"code":"import _regeneratorRuntime from \"/home/sebastian/Desktop/sag_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/sebastian/Desktop/sag_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nimport HeaderNotLoggedIn from '../components/header-not-logged-in';\nexport default {\n  name: 'Register',\n  components: {\n    HeaderNotLoggedIn: HeaderNotLoggedIn\n  },\n  data: function data() {\n    return {\n      username: '',\n      name: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      tel: ''\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (!(_this.password !== _this.confirmPassword)) {\n                _context.next = 3;\n                break;\n              }\n              throw new Error(\"Passwords do not match\");\n            case 3:\n              _context.next = 5;\n              return axios.post('http://localhost:3001/register', {\n                username: _this.username,\n                email: _this.email,\n                password: _this.password,\n                naam: _this.name,\n                achternaam: _this.lastName,\n                tel: _this.tel\n              });\n            case 5:\n              // Registration successful, redirect to login page\n              _this.$router.push('/login');\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              // Registration failed, handle error\n              console.error('Registration error:', _context.t0.message);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","HeaderNotLoggedIn","name","components","data","username","lastName","email","password","confirmPassword","tel","methods","register","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","Error","post","naam","achternaam","$router","push","t0","console","error","message","stop"],"sources":["src/views/register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <header-not-logged-in\n      rootClassName=\"header-not-logged-in-root-class-name\"\n    ></header-not-logged-in>\n    <div class=\"register-container1\"></div>\n    <form class=\"register-form input button\">\n      <code class=\"register-text\">Username</code>\n      <input\n        type=\"text\"\n        placeholder=\"placeholder\"\n        class=\"register-textinput input\"\n      />\n      <div class=\"register-container2\"></div>\n      <code class=\"register-text1\">Naam</code>\n      <div class=\"register-container3\">\n        <input type=\"text\" placeholder=\"placeholder\" class=\"input\" />\n      </div>\n      <code class=\"register-text2\">Achternaam</code>\n      <input type=\"text\" placeholder=\"placeholder\" class=\"input\" />\n      <code class=\"register-text3\">Email</code>\n      <input type=\"text\" placeholder=\"placeholder\" class=\"input\" />\n      <code class=\"register-text4\">Password</code>\n      <input type=\"password\" placeholder=\"placeholder\" class=\"input\" />\n      <code class=\"register-text5\">Confirm Password</code>\n      <input type=\"password\" placeholder=\"placeholder\" class=\"input\" />\n      <code class=\"register-text6\">Tel</code>\n      <input type=\"text\" placeholder=\"placeholder\" class=\"input\" />\n      <button @click=\"register\">Register</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport HeaderNotLoggedIn from '../components/header-not-logged-in';\n\nexport default {\n  name: 'Register',\n  components: {\n    HeaderNotLoggedIn,\n  },\n  data() {\n    return {\n      username: '',\n      name: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      tel: '',\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        if (this.password !== this.confirmPassword) {\n          throw new Error(\"Passwords do not match\");\n        }\n\n        // Make a POST request to the /register endpoint with user data\n        await axios.post('http://localhost:3001/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password,\n          naam: this.name,\n          achternaam: this.lastName,\n          tel: this.tel,\n        });\n\n        // Registration successful, redirect to login page\n        this.$router.push('/login');\n      } catch (error) {\n        // Registration failed, handle error\n        console.error('Registration error:', error.message);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.register-container {\n  width: 100%;\n  display: flex;\n  overflow: auto;\n  min-height: 100vh;\n  align-items: center;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n.register-container1 {\n  border: 2px dashed rgba(120, 120, 120, 0.4);\n  display: flex;\n  position: relative;\n}\n.register-form {\n  top: 129px;\n  left: 0px;\n  right: 0px;\n  width: 467px;\n  height: 788px;\n  margin: auto;\n  display: flex;\n  position: absolute;\n  align-self: center;\n  box-shadow: 0px 5px 20px 1px #000000;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n}\n.register-text {\n  padding-bottom: var(--dl-space-space-unit);\n}\n.register-textinput {\n  transition: 0.3s;\n}\n\n.register-container2 {\n  flex: 0 0 auto;\n  width: auto;\n  border: 2px dashed rgba(120, 120, 120, 0.4);\n  height: auto;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n}\n.register-text1 {\n  padding-top: var(--dl-space-space-unit);\n  padding-bottom: var(--dl-space-space-unit);\n}\n.register-container3 {\n  flex: 0 0 auto;\n  width: auto;\n  height: auto;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n}\n.register-text2 {\n  padding-top: var(--dl-space-space-unit);\n  padding-bottom: var(--dl-space-space-unit);\n}\n.register-text3 {\n  padding-top: var(--dl-space-space-unit);\n  padding-bottom: var(--dl-space-space-unit);\n}\n.register-text4 {\n  padding-top: var(--dl-space-space-unit);\n  padding-bottom: var(--dl-space-space-unit);\n}\n.register-text5 {\n  padding-top: var(--dl-space-space-unit);\n  padding-bottom: var(--dl-space-space-unit);\n}\n.register-text6 {\n  padding-top: var(--dl-space-space-unit);\n  padding-bottom: var(--dl-space-space-unit);\n}\n</style>\n"],"mappings":";;;;;AAkCA,OAAAA,KAAA;AACA,OAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF,iBAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAH,IAAA;MACAI,QAAA;MACAC,KAAA;MACAC,QAAA;MACAC,eAAA;MACAC,GAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAA,MAEAR,KAAA,CAAAL,QAAA,KAAAK,KAAA,CAAAJ,eAAA;gBAAAW,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,MACA,IAAAC,KAAA;YAAA;cAAAH,QAAA,CAAAE,IAAA;cAAA,OAIAtB,KAAA,CAAAwB,IAAA;gBACAnB,QAAA,EAAAQ,KAAA,CAAAR,QAAA;gBACAE,KAAA,EAAAM,KAAA,CAAAN,KAAA;gBACAC,QAAA,EAAAK,KAAA,CAAAL,QAAA;gBACAiB,IAAA,EAAAZ,KAAA,CAAAX,IAAA;gBACAwB,UAAA,EAAAb,KAAA,CAAAP,QAAA;gBACAI,GAAA,EAAAG,KAAA,CAAAH;cACA;YAAA;cAEA;cACAG,KAAA,CAAAc,OAAA,CAAAC,IAAA;cAAAR,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAEA;cACAU,OAAA,CAAAC,KAAA,wBAAAX,QAAA,CAAAS,EAAA,CAAAG,OAAA;YAAA;YAAA;cAAA,OAAAZ,QAAA,CAAAa,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}